#!/usr/bin/env bash
# bin/compile BUILD_DIR CACHE_DIR ENV_DIR

START_TIME=$SECONDS

# set -x
set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Configure directories

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

# set defaults for optional config vars
: ${SFDX_BUILDPACK_DEBUG:="false"}

source $BP_DIR/lib/common.sh
source $BP_DIR/lib/stdlib.sh

### Setup functions

install_sfdx_cli() {
  npm install sfdx-cli --global
  sfdx -v
}

fix_sfdx_cli() {
  header "Fixing sfdx-cli"
  local MY_FILES=`pwd`
  local FILE_FIXED="$MY_FILES/files/sfdxFixed.js"
  local FILE_ORIGINAL="$MY_FILES/files/sfdxOriginal.js"
  local FILE_INSTALLED="$BUILD_DIR/.heroku/node/lib/node_modules/sfdx-cli/node_modules/@salesforce/core/lib/org/authInfo.js"

  # Validate if iwe have the expected file (there should be no differences), and if so, then replace it
  if diff $FILE_ORIGINAL $FILE_INSTALLED >/dev/null; then
      log "Installed file [authInfo.js] is the expected one, replace it with the fixes";
      cp $FILE_FIXED $FILE_INSTALLED
  else
      log "Error: File is NOT the expected one! Abort building";
      diff $FILE_ORIGINAL $FILE_INSTALLED
      exit 1
  fi
  :
  # Validate the replacement works by comparing the files, there should be no differences
  if diff $FILE_FIXED $FILE_INSTALLED >/dev/null; then
      log "File [authInfo.js] replaced succesfully";
  else
      log "Error replacing file [authInfo.js]! Abort building";
      diff $FILE_FIXED $FILE_INSTALLED
      exit 1
  fi
  :
}

install_ETCopyData() {
  npm install etcopydata@2.0.3 --global
  local VERSION=`jq .version "$BUILD_DIR/.heroku/node/lib/node_modules/etcopydata/package.json"`
  log "ETCopyData version $VERSION installed"
}

setup_dirs() {
  export PATH="$BUILD_DIR/vendor/sfdx/cli/bin:$PATH"
}

header "sfdx-cli-buildpack (fixed) + ETCopyData"
log "Exporting environment directories ..."
export_env "$ENV_DIR"

log "Setting up paths ..."

debug "BUILD_DIR: $BUILD_DIR"
debug "CACHE_DIR: $CACHE_DIR"
debug "ENV_DIR: $ENV_DIR"
debug "BP_DIR: $BP_DIR"

setup_dirs
log "Starting CLI installation ..."
install_sfdx_cli
fix_sfdx_cli

# Install ETCopyData (etcopydata@0.6.4-Beta)
header "Installing ETCopyData ..."
install_ETCopyData

header "DONE! Completed in $(($SECONDS - $START_TIME))s"
exit 0
